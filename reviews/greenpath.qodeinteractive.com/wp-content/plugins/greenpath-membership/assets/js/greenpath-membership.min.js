! function(l) {
    "use strict";
    l(document).ready(function() {
        d.init()
    });
    var d = {
        init: function() {
            this.holder = l("#qodef-membership-login-modal"), this.holder.length && (d.triggerShowModal(this.holder), d.initTabs(this.holder), d.triggerResetPasswordLink(this.holder), d.triggerFormSubmit(this.holder), d.triggerFormSocialSubmit(this.holder))
        },
        triggerShowModal: function(o) {
            o.children(".qodef-membership-login-modal-overlay").on("click", function() {
                d.hideModal(o)
            }), l(window).on("keyup", function(e) {
                27 === e.keyCode && d.hideModal(o)
            }), l(document.body).on("greenpath_membership_trigger_login_modal", function() {
                d.showModal(o)
            })
        },
        showModal: function(e) {
            e.hasClass("qodef--opened") || e.addClass("qodef--opened")
        },
        hideModal: function(e) {
            e.hasClass("qodef--opened") && e.removeClass("qodef--opened")
        },
        initTabs: function(e) {
            e.children(".qodef-membership-login-modal-content").tabs()
        },
        triggerResetPasswordLink: function(o) {
            o.find("#qodef-membership-login-modal-part .qodef-m-links-reset-password").on("click", function(e) {
                e.preventDefault();
                e = o.find(".qodef-membership-login-modal-navigation .qodef-m-navigation-item.qodef--reset-password");
                e.length && e.find(".qodef-e-link").trigger("click")
            })
        },
        triggerFormSubmit: function(e) {
            e = e.find("form");
            e.length && e.each(function() {
                var o = l(this);
                o.on("submit", function(e) {
                    e.preventDefault(), o.hasClass("qodef--loading") || d.triggerRequest(o)
                })
            })
        },
        triggerFormSocialSubmit: function(e) {
            var o = e.find('form[id*="qodef-membership-login"]');
            o.length && o.find(".qodef-m-social-login").find(".qodef-m-social-login-btn").on("click", function(e) {
                e.preventDefault(), l(document).trigger("greenpath_membership_social_login_is_triggered", [d, o, l(this).data("social")])
            })
        },
        triggerRequest: function(o, e, n) {
            o.addClass("qodef--loading");
            var i = o.find(".qodef-m-response"),
                t = o.find(".qodef-m-request-type").val(),
                s = (i.removeClass("qodef--success qodef--error qodef--undefined").empty(), {
                    options: {
                        request_type: t,
                        redirect: o.find(".qodef-m-redirect").val(),
                        private_key: "false"
                    },
                    nonce: o.find("#greenpath-membership-ajax-" + t + "-nonce").val()
                }),
                r = "POST",
                a = qodefGlobal.vars.loginModalRestRoute;
            switch (t) {
                case "login":
                    r = "GET", a = qodefGlobal.vars.loginModalGetRestRoute, s.options.user_login = o.find(".qodef-m-user-name").val(), s.options.user_password = o.find(".qodef-m-user-password").val(), s.options.remember = o.find(".qodef-m-links-remember:checked").length, null != e && (s.options.social_login = e, null != n) && (s.options.social_response = n);
                    break;
                case "register":
                    s.options.user_login = o.find(".qodef-m-user-name").val(), s.options.user_email = o.find(".qodef-m-user-email").val(), s.options.user_password = o.find(".qodef-m-user-password").val(), s.options.user_confirm_password = o.find(".qodef-m-user-confirm-password").val();
                    break;
                case "reset-password":
                    s.options.user_login = o.find(".qodef-m-user-login").val()
            }
            return l.ajax({
                type: r,
                url: qodefGlobal.vars.restUrl + a,
                data: s,
                success: function(e) {
                    i.addClass("qodef--" + e.status).html(e.message), "success" === e.status && ("register" !== t || s.options.hasOwnProperty("social_login") ? d.triggerRedirection(e.redirect) : d.triggerForceLogin(o, s, e.redirect))
                },
                complete: function() {
                    o.removeClass("qodef--loading")
                }
            }), !1
        },
        triggerRedirection: function(e) {
            "" !== e && e !== window.location && (window.location = e)
        },
        triggerForceLogin: function(e, o, n) {
            o.options.request_type = "login", o.nonce = e.parent().find("#greenpath-membership-ajax-login-nonce").val(), l.ajax({
                type: "GET",
                url: qodefGlobal.vars.restUrl + qodefGlobal.vars.loginModalGetRestRoute,
                data: o,
                dataType: "json",
                success: function(e) {
                    "success" === e.status && d.triggerRedirection(n)
                }
            })
        }
    }
}(jQuery),
function(e, o, n) {
    var i = e.getElementsByTagName(o)[0];
    e.getElementById(n) || ((e = e.createElement(o)).id = n, e.src = "https://connect.facebook.net/en_US/sdk.js", i.parentNode.insertBefore(e, i))
}(document, "script", "facebook-jssdk"),
function(e) {
    "use strict";
    e(document).ready(function() {
        t.init()
    }), e(document).on("greenpath_membership_social_login_is_triggered", function(e, o, n, i) {
        t.fbIsAppIdSet() && "facebook" === i && t.fbLogin(o, n, i)
    });
    var t = {
        init: function() {
            t.fbIsAppIdSet() && t.fbAsyncInit(greenpathMembershipGlobal.facebookAppId)
        },
        fbIsAppIdSet: function() {
            return void 0 !== greenpathMembershipGlobal.facebookAppId && "" !== greenpathMembershipGlobal.facebookAppId
        },
        fbAsyncInit: function(e) {
            "" !== e && (window.fbAsyncInit = function() {
                FB.init({
                    appId: e,
                    autoLogAppEvents: !0,
                    cookie: !0,
                    xfbml: !0,
                    version: "v5.0"
                }), window.FB = FB
            })
        },
        fbLogin: function(o, n, i) {
            window.FB.login(function(e) {
                t.fbCheckStatus(e, o, n, i)
            }, {
                scope: "email, public_profile"
            })
        },
        fbCheckStatus: function(e, o, n, i) {
            "connected" === e.status ? t.fbGetUserData(o, n, i) : "not_authorized" === e.status ? console.log("Please log into this app") : console.log("Please log into Facebook")
        },
        fbGetUserData: function(o, n, i) {
            FB.api("/me", "GET", {
                fields: "id, name, email, link, picture"
            }, function(e) {
                e.image = e.picture.data.url, n.hasClass("qodef--loading") || o.triggerRequest(n, i, e)
            })
        }
    }
}(jQuery),
function(e) {
    "use strict";
    e(document).on("ready", function() {
        t.init()
    }), e(document).on("greenpath_membership_social_login_is_triggered", function(e, o, n, i) {
        t.isAppIdSet() && "google" === i && t.login(o, n, i)
    });
    var t = {
        init: function() {
            t.isAppIdSet() && t.asyncInit(greenpathMembershipGlobal.googleAppId)
        },
        isAppIdSet: function() {
            return void 0 !== greenpathMembershipGlobal.googleAppId && "" !== greenpathMembershipGlobal.googleAppId
        },
        asyncInit: function(e) {
            "" !== e && google.accounts.id.initialize({
                client_id: e
            })
        },
        login: function(o, n, i) {
            google.accounts.oauth2.initTokenClient({
                client_id: greenpathMembershipGlobal.googleAppId,
                scope: "https://www.googleapis.com/auth/userinfo.profile",
                prompt: "",
                callback: function(e) {
                    t.signIn(e, o, n, i)
                }
            }).requestAccessToken()
        },
        signIn: function(e, o, n, i) {
            e && e.access_token && (e = "https://people.googleapis.com/v1/people/me?personFields=names,emailAddresses,photos&access_token=" + encodeURIComponent(e.access_token), fetch(e).then(function(e) {
                return e.text()
            }).then(function(e) {
                e && e.length && t.getUserData(e, o, n, i)
            }))
        },
        getUserData: function(e, o, n, i) {
            e && (e = {
                id: (e = JSON.parse(e)) ? .resourceName.replace(/[A-Za-z\\/]/g, ""),
                name: e ? .names[0] ? .displayName,
                email: e ? .emailAddresses[0] ? .value,
                image: e ? .photos[0] ? .url
            }, n.hasClass("qodef--loading") || o.triggerRequest(n, i, e))
        }
    }
}(jQuery),
function() {
    "use strict";
    jQuery(document).on("greenpath_membership_social_login_is_triggered", function(e, o, n, i) {
        "twitter" === i && t.triggerRequest(o, n, i)
    });
    var t = {
        triggerRequest: function(e, o, n) {
            o.hasClass("qodef--loading") || e.triggerRequest(o, n)
        }
    }
}();